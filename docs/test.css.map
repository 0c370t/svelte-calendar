{
  "version": 3,
  "file": "test.css",
  "sources": [
    "..\\src\\Components\\Popover.html"
  ],
  "sourcesContent": [
    "<script>\r\n\r\n  import { onMount } from 'svelte';\r\n\r\n  let isOpen = false; \r\n  let shrink = false; \r\n  let translateX = 0; \r\n  let translateY = 0; \r\n  let w; \r\n\r\n  // refs: \r\n  let popover;\r\n  let contentsAnimated;\r\n  let contentsWrapper;\r\n  let triggerContainer;\r\n\r\n  // props: \r\n  export let trigger; \r\n\r\n  function checkForFocusLoss(evt) { \r\n    if(!open) return;\r\n    let el = evt.target;\r\n    do {\r\n      if(el == popover) return;\r\n    } while(el = el.parentNode)\r\n    close();\r\n  }; \r\n\r\n  var once = (el,evt,cb) => { \r\n    function handler() { \r\n      cb.apply(this,arguments); \r\n      el.removeEventListener(evt,handler);\r\n    }\r\n    el.addEventListener(evt,handler);\r\n  }\r\n\r\n  function close() { \r\n    shrink = true; \r\n    once(contentsAnimated, 'animationend', () => {\r\n      shrink = false; \r\n      isOpen = false;\r\n      // this.fire('closed');\r\n    });\r\n  }\r\n\r\n  function getDistanceToEdges() { \r\n    if(!isOpen) isOpen = true;\r\n    let width = contentsWrapper.offsetWidth; \r\n    let height = contentsWrapper.offsetHeight; \r\n    let rect = contentsWrapper.getBoundingClientRect(); \r\n    if(!isOpen) isOpen = false;\r\n    return { \r\n      top: rect.top + (-1*translateY), \r\n      bottom: window.innerHeight - rect.bottom + translateY, \r\n      left: rect.left + (-1*translateX), \r\n      right: document.body.clientWidth - rect.right + translateX\r\n    }\r\n  }\r\n\r\n  function getTranslate() { \r\n    let dist = getDistanceToEdges(); \r\n    let translateX, translateY; \r\n    if(w < 480) { \r\n      translateY = dist.bottom;\r\n    } else if(dist.top < 0) { \r\n      translateY = Math.abs(dist.top); \r\n    } else if(dist.bottom < 0) { \r\n      translateY = dist.bottom; \r\n    } else { \r\n      translateY = 0; \r\n    }\r\n    if(dist.left < 0) { \r\n      translateX = Math.abs(dist.left); \r\n    } else if(dist.right < 0) { \r\n      translateX = dist.right;\r\n    } else { \r\n      translateX = 0; \r\n    }\r\n    return { translateX, translateY }  \r\n  }\r\n\r\n  function open() {\r\n    isOpen = true;  \r\n    // this.fire('opened');\r\n  }\r\n\r\n  onMount(() => {\r\n    document.addEventListener('click',checkForFocusLoss.bind(this)); \r\n    if(!trigger) return; \r\n    triggerContainer.appendChild(trigger.parentNode.removeChild(trigger));\r\n  });\r\n\r\n</script>\r\n\r\n<svelte:window bind:innerWidth={w} />\r\n\r\n<div class=\"popover\" bind:this={popover}>\r\n  <div class=\"trigger\" bind:this={triggerContainer}>\r\n    <slot name=\"trigger\">\r\n    </slot>\r\n  </div>\r\n  <div \r\n    class=\"contents-wrapper\" \r\n    class:visible={isOpen}\r\n    class:shrink={shrink}\r\n    style=\"transform: translate(-50%,-50%) translate({translateX}px, {translateY}px)\" \r\n    bind:this={contentsWrapper}>\r\n    <div class=\"contents\" bind:this={contentsAnimated}>\r\n      <div class=\"contents-inner\">\r\n        <slot name=\"contents\"></slot>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .popover { \r\n    position: relative;\r\n  }\r\n\r\n  .contents-wrapper { \r\n    transform: translate(-50%, -50%); \r\n    position: absolute;\r\n    top: 50%; \r\n    left: 50%; \r\n    transition: none;\r\n    z-index: 2;\r\n    display: none;\r\n  }\r\n\r\n  .contents { \r\n    background: #fff;\r\n    box-shadow: 0px 10px 26px rgba(0,0,0,0.4) ;\r\n    opacity: .8; \r\n    padding-top: 0;\r\n    display: none;\r\n    animation: grow 200ms forwards cubic-bezier(.92,.09,.18,1.05);\r\n  }\r\n\r\n  .contents-inner { \r\n    animation: fadeIn 400ms forwards;\r\n  }\r\n\r\n  .contents-wrapper.visible { \r\n    display: block;\r\n  }\r\n\r\n  .contents-wrapper.visible .contents { \r\n    opacity: 1; \r\n    transform: scale(1);\r\n    display: block;\r\n  }\r\n\r\n  .contents-wrapper.shrink .contents { \r\n    animation: shrink 150ms forwards cubic-bezier(.92,.09,.18,1.05);\r\n  }\r\n\r\n  @keyframes grow { \r\n    0% { \r\n      transform: scale(.9,.1); \r\n      opacity: 0; \r\n    }\r\n    30% { \r\n      opacity: 1; \r\n    }\r\n    100% { \r\n      transform: scale(1);\r\n    }\r\n  }\r\n\r\n  @keyframes shrink { \r\n    0% { \r\n      transform: scale(1); \r\n      opacity: 1; \r\n    }\r\n    70% { \r\n      opacity: 1; \r\n    }\r\n    100% { \r\n      opacity: 0; \r\n      transform: scale(.9,.1);\r\n    }\r\n  }\r\n\r\n  @keyframes fadeIn { \r\n    0% { \r\n      opacity: 0; \r\n    }\r\n    50% { \r\n      opacity: 0;\r\n    }\r\n    100% { \r\n      opacity: 1; \r\n    }\r\n  }\r\n</style>"
  ],
  "names": [],
  "mappings": "AAoHE,QAAQ,eAAC,CAAC,AACR,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,iBAAiB,eAAC,CAAC,AACjB,SAAS,CAAE,qBAAqB,CAChC,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,CACT,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,CAAC,CACV,OAAO,CAAE,IAAI,AACf,CAAC,AAED,SAAS,eAAC,CAAC,AACT,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,8BAA8B,CAC1C,OAAO,CAAE,EAAE,CACX,WAAW,CAAE,CAAC,CACd,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,mBAAI,8CAA8C,AAC/D,CAAC,AAED,eAAe,eAAC,CAAC,AACf,SAAS,CAAE,qBAAM,eAAe,AAClC,CAAC,AAED,yBAAyB,eAAC,CAAC,AACzB,OAAO,CAAE,KAAK,AAChB,CAAC,AAED,wCAAyB,UAAU,eAAC,CAAC,AACnC,OAAO,CAAE,CAAC,CACV,SAAS,CAAE,QAAQ,CACnB,OAAO,CAAE,KAAK,AAChB,CAAC,AAED,uCAAwB,UAAU,eAAC,CAAC,AAClC,SAAS,CAAE,qBAAM,8CAA8C,AACjE,CAAC,AAED,WAAW,mBAAK,CAAC,AACf,EAAE,AAAC,CAAC,AACF,SAAS,CAAE,YAAY,CACvB,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,GAAG,AAAC,CAAC,AACH,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,SAAS,CAAE,QAAQ,AACrB,CAAC,AACH,CAAC,AAED,WAAW,qBAAO,CAAC,AACjB,EAAE,AAAC,CAAC,AACF,SAAS,CAAE,QAAQ,CACnB,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,GAAG,AAAC,CAAC,AACH,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,OAAO,CAAE,CAAC,CACV,SAAS,CAAE,YAAY,AACzB,CAAC,AACH,CAAC,AAED,WAAW,qBAAO,CAAC,AACjB,EAAE,AAAC,CAAC,AACF,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,GAAG,AAAC,CAAC,AACH,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,OAAO,CAAE,CAAC,AACZ,CAAC,AACH,CAAC"
}